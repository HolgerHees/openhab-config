Bridge mqtt:broker:mosquitto [ host="mosquitto", secure=false ]
{
    Thing topic vcontrol "Heizung" @ "Geräte" {
        Type number : operationMode "Betriebsart" [ stateTopic="/vcontrol/getBetriebsart", commandTopic="/vcontrol/setBetriebsartTo" ]
//        Type number : operationMode "Betriebsart" [ stateTopic="/vcontrol/getBetriebsart" ]
        Type number : power "Leistung" [ stateTopic="/vcontrol/getLeistungIst" ]
        Type number : pumpSpeed "Heizkreispumpe" [ stateTopic="/vcontrol/getHeizkreisPumpeDrehzahl" ]
        Type number : targetTemperature "Ziel" [ stateTopic="/vcontrol/getTempRaumSoll" ]
        Type number : outdoorTemperature "Aussen (Ist)" [ stateTopic="/vcontrol/getTempAussen" ]
        Type number : outdoorTemperatureSubdued "Aussen (Ged.)" [ stateTopic="/vcontrol/getTempAussenGedaempft" ]
        Type number : offsetTemperatureTarget "Vorlauf (Soll)" [ stateTopic="/vcontrol/getTempVorlaufSoll" ]
        Type number : offsetTemperature "Vorlauf (Ist)" [ stateTopic="/vcontrol/getTempVorlauf" ]
        Type number : boilerTemperatureTarget "Kessel (Soll)" [ stateTopic="/vcontrol/getTempKesselSoll" ]
        Type number : boilerTemperature "Kessel (Ist)" [ stateTopic="/vcontrol/getTempKessel" ]
        Type number : burnerStarts "Brennerstarts" [ stateTopic="/vcontrol/getBrennerStarts" ]
        Type number : burnerHours "Brennerstunden" [ stateTopic="/vcontrol/getBrennerStunden" ]
        Type number : watherTemperatureStorage "Wasser" [ stateTopic="/vcontrol/getTempWasserSpeicher" ]
        Type number : watherTemperatureSolarCollector "Solar Kollektor" [ stateTopic="/vcontrol/getTempSolarKollektor" ]
        Type number : watherTemperatureSolarStorage "Solar Speicher" [ stateTopic="/vcontrol/getTempSolarSpeicher" ]
        Type number : solarHours "Solar Stunden" [ stateTopic="/vcontrol/getSolarStunden" ]
        Type number : solarPower "Solar Leistung" [ stateTopic="/vcontrol/getSolarLeistung" ]
        Type number : pumpState "Solar Pumpe" [ stateTopic="/vcontrol/getSolarPumpeStatus" ]
        Type number : solarReheatingState "Nachladeunterdrückung" [ stateTopic="/vcontrol/getNachladeunterdrueckungStatus" ]
        Type number : commonFault "Status" [ stateTopic="/vcontrol/getSammelstoerung" ]
    }    
    Thing topic weatherstation "Wetterstation" @ "Geräte" {
        Type number : batteryVoltage "Betriebsart" [ stateTopic="mysensors-pub-1/1/0/#" ]
        Type number : batteryCurrent "Betriebsart" [ stateTopic="mysensors-pub-1/1/1/#" ]
        Type number : rainImpulse "Counter (current)" [ stateTopic="mysensors-pub-1/1/2/#" ]
        Type number : rainRate "Rate Sensor" [ stateTopic="mysensors-pub-1/1/3/#" ]
        Type number : rainHeater "Heizung" [ stateTopic="mysensors-pub-1/1/4/1/0/2", transformationPattern="MAP:weatherstation_heating.map" ]
        Type string : rainHeaterRequest "Heizung" [ stateTopic="mysensors-pub-1/1/4/2/0/2" ]
        Type number : windSpeed "Geschwindigkeit" [ stateTopic="mysensors-pub-1/1/5/#", transformationPattern="JS:weatherstation_wind.js" ]
        Type number : windGust "Böe" [ stateTopic="mysensors-pub-1/1/6/#", transformationPattern="JS:weatherstation_wind.js" ]
        Type number : windDirection "Richtung" [ stateTopic="mysensors-pub-1/1/7/#" ]
        Type number : temperature "Temperatur" [ stateTopic="mysensors-pub-1/1/8/#" ]
        Type number : humidity "Temperatur" [ stateTopic="mysensors-pub-1/1/9/#" ]
        Type number : pressure "Luftdruck" [ stateTopic="mysensors-pub-1/1/10/#" ]
        Type number : solarTemperature "Sonnentemperatur" [ stateTopic="mysensors-pub-1/1/11/#" ]
        Type number : lightLevel "Helligkeit" [ stateTopic="mysensors-pub-1/1/12/#" ]
        Type number : uvA "UV A" [ stateTopic="mysensors-pub-1/1/13/#" ]
        Type number : uvB "UV B" [ stateTopic="mysensors-pub-1/1/14/#" ]
    }
    Thing topic roomba "Roomba" @ "Geräte" {
        //Type string : command "Command" [ commandTopic="/roomba/command:command:*:${command}" ]
        Type switch : carpetBoost "Auto carpet Boost" [ stateTopic="/roomba/setting:command:ON:carpetBoost", transformationPattern="MAP:roomba_switch.map" ]
        Type switch : vacHigh "Vacuum Boost" [ stateTopic="/roomba/setting:command:ON:vacHigh", transformationPattern="MAP:roomba_switch.map" ]
        Type switch : noAutoPasses "No Auto Passes" [ stateTopic="/roomba/setting:command:ON:noAutoPasses", transformationPattern="MAP:roomba_switch.map" ]
        Type switch : twoPass "Two Passes" [ stateTopic="/roomba/setting:command:ON:twoPass", transformationPattern="MAP:roomba_switch.map" ]
        Type switch : edgeClean "Edge Clean" [ stateTopic="/roomba/setting:command:ON:openOnly", transformationPattern="MAP:roomba_inverse_switch.map" ]
        Type switch : binPause "Always Complete" [ stateTopic="/roomba/setting:command:ON:binPause", transformationPattern="MAP:roomba_inverse_switch.map" ]
        Type string : status "Status" [ stateTopic="/roomba/feedback/state" ]
        Type string : phase "Phase" [ stateTopic="/roomba/feedback/cleanMissionStatus_phase" ]
        Type number : batPct "Batterie" [ stateTopic="/roomba/feedback/batPct" ]
        Type number : rssi "WLAN Signal" [ stateTopic="/roomba/feedback/signal_rssi" ]
        Type switch : bin_present "Staubbehälter" [ stateTopic="/roomba/feedback/bin_present", transformationPattern="MAP:roomba_switch.map" ]
        Type switch : full "Staubbehälter" [ stateTopic="/roomba/feedback/bin_full", transformationPattern="MAP:roomba_switch.map" ]
        Type string : initiator "Auslöser" [ stateTopic="/roomba/feedback/cleanMissionStatus_initiator" ]
        Type number : mssnM "Verstrichene Zeit" [ stateTopic="/roomba/feedback/cleanMissionStatus_mssnM" ]
        Type number : sqft "Gereinigte Fläche" [ stateTopic="/roomba/feedback/cleanMissionStatus_sqft" ]
        Type switch : error "Error" [ stateTopic="/roomba/feedback/cleanMissionStatus_error", transformationPattern="MAP:roomba_switchFromMqtt.map" ]
        Type string : errortext "Error Message" [ stateTopic="/roomba/feedback/error_message" ]
        Type string : lastcommand "Letzter Befehl" [ stateTopic="/roomba/feedback/lastCommand_command" ]
        Type string : mission "Mission" [ stateTopic="/roomba/feedback/cleanMissionStatus_cycle" ]
        Type number : expireM "Mission Recharge Time" [ stateTopic="/roomba/feedback/cleanMissionStatus_expireM" ]
        Type number : rechrgM "Remaining Time To Recharge" [ stateTopic="/roomba/feedback/cleanMissionStatus_rechrgM" ]
    }
}
